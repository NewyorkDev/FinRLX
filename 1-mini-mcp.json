{
  "name": "System X - Autonomous Trading & Backtesting System",
  "description": "Production-grade autonomous trading and backtesting system meeting 10-day evaluation criteria. Integrates FinRL framework with V9B stock selection, Polygon 5yr historical data, comprehensive Supabase logging, and PM2 autonomous operation.",
  "type": "python-ml-finance-trading-autonomous",
  "file_structure": {
    "system_x.py": "üèÜ MAIN - Autonomous trading & backtesting system with 10-day evaluation compliance",
    "start_system_x.sh": "Management script for System X operations (start/stop/status/logs)",
    "ecosystem.config.js": "PM2 configuration for autonomous operation and monitoring",
    "finrl/": "Complete FinRL package with 17 components",
    "logs/": "System X operation logs and monitoring data",
    "the_end/.env": "Production credentials including Polygon API (5yr data)",
    "not-in-use/": "Organized legacy files: traders/, utils/, exploration/, analysis/, one-time scripts/"
  },
  "important_files": [
    "system_x.py",
    "start_system_x.sh", 
    "ecosystem.config.js",
    "the_end/.env",
    "README.md",
    "not-in-use/README.md"
  ],
  "run_instructions": {
    "system_x_test": "/opt/homebrew/bin/python3.12 system_x.py --test",
    "system_x_start": "./start_system_x.sh start",
    "system_x_status": "./start_system_x.sh status",
    "system_x_logs": "./start_system_x.sh logs --follow",
    "system_x_stop": "./start_system_x.sh stop",
    "daily_report": "/opt/homebrew/bin/python3.12 system_x.py --report",
    "legacy_production_trading": "/opt/homebrew/bin/python3.12 not-in-use/legacy-traders/production_day_trader.py trade",
    "legacy_complete_finrl": "/opt/homebrew/bin/python3.12 not-in-use/legacy-traders/complete_finrl_trader.py pipeline --debug"
  },
  "system_x_features": {
    "autonomous_operation": "Continuous trading during market hours, backtesting when closed",
    "data_sources": ["V9B Supabase (real-time)", "Polygon API (5yr historical)", "Alpaca (live trading)"],
    "risk_management": "PDT compliance, Kelly Criterion position sizing, circuit breakers, 5% stop loss",
    "backtesting_strategies": ["PPO Reinforcement Learning", "V9B Momentum", "Mean Reversion"],
    "logging_integration": "Comprehensive Supabase logging for all trades, backtests, health metrics",
    "monitoring": "Slack notifications, PM2 process management, health checks",
    "evaluation_compliance": "Meets all 7 criteria for 10-day evaluation challenge",
    "advanced_features": {
      "kelly_criterion": "Optimal position sizing based on historical win/loss statistics",
      "portfolio_rebalancing": "Dynamic allocation adjustment every 4 hours with 5% deviation threshold",
      "ml_signal_combining": "RandomForest model for enhanced signal prediction and feature importance",
      "security_encryption": "Fernet encryption for sensitive credentials with keyring storage",
      "circuit_breakers": "Automatic system protection with failure thresholds and recovery timeouts",
      "async_operations": "Concurrent price fetching and data processing for improved performance",
      "performance_analytics": "Real-time Sharpe, Sortino, VaR, and drawdown calculations",
      "walk_forward_analysis": "Rolling window backtesting for realistic strategy validation",
      "dynamic_risk_adjustment": "Adaptive position sizing based on recent performance metrics"
    }
  },
  "alpaca_integration": {
    "account_type": "Paper trading accounts",
    "account_balance": "$30,000 per account",
    "api_endpoints": "Alpaca REST API v2",
    "order_types": "Market orders, day time-in-force",
    "multiple_accounts": "3 accounts configured (PK9F3V..., PK1KKF..., PKRRVZ...)"
  },
  "polygon_integration": {
    "data_access": "5 years of comprehensive historical data",
    "api_key": "EgwoX6UL8wXl6ro9m1iQP4TjlQrxUs4k",
    "data_types": "Daily OHLCV, technical indicators, volume analysis",
    "backtesting_foundation": "High-quality historical data for strategy validation"
  },
  "trading_strategy": {
    "universe": "V9B qualified stocks (DTS ‚â• 65)",
    "position_sizing": "Kelly Criterion optimal sizing with 15% max cap and dynamic risk adjustment",
    "entry_signals": "ML-enhanced: DTS ‚â• 70 + V9B ‚â• 8.0 + ML confidence ‚â• 0.6",
    "exit_signals": "Multi-factor: DTS < 60 or 5% stop loss or 10% take profit or ML signal reversal",
    "frequency": "5-minute intervals with async price fetching and concurrent analysis",
    "pdt_compliance": "Maximum 3 day trades with intelligent trade sequencing",
    "portfolio_management": "Automatic rebalancing to target allocations based on V9B scores",
    "risk_controls": "Circuit breakers, performance monitoring, and adaptive risk scaling"
  },
  "technologies": [
    "Python 3.12.10",
    "FinRL framework", 
    "Gymnasium 1.1.1 + Gym 0.26.2",
    "Supabase client",
    "Alpaca Trade API",
    "Polygon API",
    "Stable-Baselines3 2.6.0 (PPO/A2C)",
    "scikit-learn (RandomForest, StandardScaler)",
    "cryptography (Fernet encryption)",
    "keyring (secure credential storage)",
    "asyncio (concurrent operations)",
    "pandas 2.2.3/numpy 1.26.4",
    "PM2 Process Manager",
    "Slack Integration"
  ],
  "current_status": {
    "system_x_operational": true,
    "autonomous_ready": true,
    "polygon_connected": true,
    "supabase_integrated": true,
    "alpaca_connected": true,
    "qualified_stocks_count": 8,
    "portfolio_value": "$30,000.00",
    "backtesting_enabled": true,
    "pm2_configured": true,
    "evaluation_compliant": true,
    "production_grade": true,
    "enhanced_features_status": "‚úÖ ALL ENHANCED FEATURES OPERATIONAL",
    "feature_detection_resolved": "‚úÖ All packages properly detected and Enhanced features enabled",
    "advanced_features_implemented": {
      "kelly_criterion_enabled": true,
      "portfolio_rebalancing_active": true,
      "ml_signal_combiner_trained": true,
      "security_encryption_active": true,
      "circuit_breakers_operational": true,
      "async_operations_enabled": true,
      "performance_analytics_running": true,
      "risk_adjustment_dynamic": true,
      "monitoring_dashboard_enabled": true,
      "trade_journal_analytics_enabled": true,
      "emergency_stop_conditions_enabled": true,
      "yaml_configuration_enabled": true
    },
    "verified_enhanced_features": {
      "security": "Enhanced (cryptography + keyring working)",
      "ml": "Available (scikit-learn working)",
      "monitoring": "HTTP Enabled (Flask working)",
      "finrl": "Full (Python 3.12.10 + gymnasium 1.1.1 + gym 0.26.2 compatible)",
      "ppo": "Available (stable-baselines3 2.6.0 working)",
      "data": "Polygon + Alpaca (both working)"
    },
    "python_environment": {
      "version": "Python 3.12.10",
      "python_path": "/opt/homebrew/bin/python3.12",
      "package_compatibility": "All dependencies verified for Python 3.12",
      "supabase_status": "‚úÖ Supabase 2.15.2 installed and working",
      "alpaca_status": "‚úÖ Alpaca Trade API 3.2.0 installed and working",
      "gymnasium_status": "‚úÖ Gymnasium 1.1.1 + Gym 0.26.2 installed and working",
      "finrl_compatibility": "‚úÖ All FinRL environments functional with current Python/gym versions",
      "dependency_warnings_resolved": "‚úÖ No gymnasium/gym warnings - all imports successful",
      "websockets_fixed": "‚úÖ Websockets version conflicts resolved (14.2 installed)",
      "package_installation": "‚úÖ All packages installed with --break-system-packages flag",
      "monitoring_port": "‚úÖ Changed from 5000 to 8080 to avoid AirPlay conflicts",
      "port_scanning": "‚úÖ Port 8080 verified free and optimal for web development monitoring",
      "dashboard_implementation": "‚úÖ Advanced TradingView-style dashboard with real-time updates fully operational",
      "real_time_validation": "‚úÖ Dashboard JavaScript making API calls every 5 seconds with live data streaming",
      "infinite_scroll_fixed": "‚úÖ Portfolio performance chart infinite scrolling issue resolved with value-change detection (only updates when portfolio changes >$10)",
      "color_scheme_updated": "‚úÖ Dashboard updated with blue color palette: #2b8dc8, #062e5d, #094180, #3b9cdc, #022e5d, #1e4784, #1c4793, #03264f, #71a2dc",
      "retry_logic_implemented": "‚úÖ Tenacity exponential backoff retry logic for all API calls with 3-attempt fallback",
      "performance_persistence": "‚úÖ Comprehensive metrics persistence across restarts (daily_returns, trade_journal, risk_metrics)",
      "simple_dashboard_fallback": "‚úÖ Lightweight HTML dashboard fallback at /simple route for systems where main dashboard fails",
      "enhanced_stop_command": "‚úÖ Enhanced stop script now kills rogue processes and clears port 8080 to prevent 'Address already in use' errors",
      "robust_flask_server": "‚úÖ Enhanced Flask server with 5-retry logic, exponential backoff, automatic port cleanup, and health check validation",
      "portfolio_chart_responsiveness": "‚úÖ Fixed Portfolio Performance chart excessive height issue with proper CSS constraints (400px height, responsive design breakpoints)"
    }
  },
  "usage_examples": {
    "start_autonomous": "./start_system_x.sh start",
    "test_system": "/opt/homebrew/bin/python3.12 system_x.py --test",
    "view_logs": "./start_system_x.sh logs --follow",
    "check_status": "./start_system_x.sh status", 
    "daily_report": "/opt/homebrew/bin/python3.12 system_x.py --report",
    "stop_system": "./start_system_x.sh stop",
    "view_legacy_files": "ls -la not-in-use/",
    "legacy_production": "/opt/homebrew/bin/python3.12 not-in-use/legacy-traders/production_day_trader.py trade"
  },
  "system_x_architecture": {
    "core_system": "system_x.py - Production-grade autonomous trading with advanced ML and risk management",
    "trading_mode": "Market hours: ML-enhanced V9B signals + Kelly Criterion sizing + portfolio rebalancing",
    "backtesting_mode": "Market closed: 3 strategies on Polygon 5yr data with walk-forward analysis",
    "risk_management": "Kelly Criterion + Circuit breakers + Dynamic risk adjustment + Performance monitoring",
    "data_integration": "V9B + Polygon + Alpaca with async processing and intelligent caching",
    "monitoring": "PM2 + Slack + Supabase + Real-time analytics (Sharpe, Sortino, VaR, DD)",
    "evaluation_ready": "Production-grade system exceeding all 7 evaluation criteria with advanced features",
    "security": "Encrypted credential storage, secure API handling, circuit breaker protection",
    "performance": "Async operations, LRU caching, concurrent price fetching, optimized data processing"
  },
  "ten_day_evaluation": {
    "consistency_reliability": "‚úÖ Enhanced with circuit breakers, error recovery, and performance monitoring",
    "core_functionality": "‚úÖ Advanced ML-enhanced trading logic with Kelly Criterion optimization",
    "transparency": "‚úÖ Comprehensive logging plus real-time performance analytics and feature importance",
    "main_dependencies": "‚úÖ All dependencies resolved with graceful fallbacks for optional components",
    "supabase_integration": "‚úÖ Full integration with encrypted credential storage and comprehensive logging",
    "code_versioning": "‚úÖ Latest production-grade version with organized legacy file structure",
    "trading_performance": "‚úÖ ML-enhanced V9B signals with optimal position sizing and dynamic risk management",
    "advanced_capabilities": "‚úÖ Exceeds evaluation requirements with institutional-grade features"
  },
  "organized_structure": {
    "active_files": ["system_x.py", "start_system_x.sh", "ecosystem.config.js"],
    "legacy_traders": "not-in-use/legacy-traders/ - 10 superseded trading systems",
    "supabase_utils": "not-in-use/supabase-utils/ - Database utility scripts",
    "exploration": "not-in-use/exploration-scripts/ - Research and analysis scripts",
    "analysis_tools": "not-in-use/analysis-tools/ - Portfolio analysis utilities",
    "one_time_scripts": "not-in-use/one-time-scripts/ - Setup scripts (clearly labeled)",
    "documentation": "not-in-use/README.md - Complete organization guide",
    "monitoring_api": "Professional trading dashboard at localhost:8080 with TradingView-style interface and real-time updates",
    "configuration_file": "config.yaml with comprehensive settings for trading, risk, ML, and monitoring"
  },
  "advanced_dashboard": {
    "main_dashboard": "GET http://localhost:8080/ - Advanced interactive trading dashboard with real-time updates",
    "features": [
      "Real-time portfolio performance charts with Chart.js integration (value-change detection to prevent infinite scrolling, responsive height constraints)",
      "Live system health monitoring with color-coded status indicators", 
      "Interactive V9B qualified stocks table with ML signals",
      "Advanced risk metrics dashboard (VaR, Sharpe, Sortino, Kelly)",
      "Live activity feed with timestamp logging",
      "Emergency stop functionality with confirmation dialogs",
      "Responsive design optimized for desktop and mobile",
      "Professional blue color scheme: #2b8dc8, #062e5d, #094180, #3b9cdc, #022e5d, #1e4784, #1c4793, #03264f, #71a2dc",
      "5-second auto-refresh for real-time data updates with smart update prevention",
      "Exponential backoff retry logic for API reliability",
      "Performance metrics persistence across system restarts",
      "Simple dashboard fallback for maximum reliability"
    ],
    "technology_stack": "HTML5 + CSS3 + JavaScript (Vanilla) + Chart.js + Font Awesome + Flask backend"
  },
  "api_endpoints": {
    "main_dashboard": "GET http://localhost:8080/ - Advanced TradingView-style dashboard (auto-fallback to simple)",
    "simple_dashboard": "GET http://localhost:8080/simple - Lightweight dashboard fallback",
    "health_check": "GET http://localhost:8080/health - System health and connection status",
    "performance_metrics": "GET http://localhost:8080/metrics - Real-time trading and ML performance", 
    "emergency_stop": "POST http://localhost:8080/emergency-stop - Immediate system shutdown with position closure",
    "configuration": "GET/POST http://localhost:8080/config - View and update system configuration",
    "qualified_stocks": "GET http://localhost:8080/qualified-stocks - V9B qualified stocks with DTS/V9B scores",
    "live_data": "GET http://localhost:8080/live-data - Real-time trading data for dashboard updates"
  },
  "institutional_features": {
    "risk_management": "Emergency stop conditions, consecutive loss tracking, daily loss limits",
    "performance_optimization": "Connection pooling, thread pool execution, async operations, exponential backoff retry",
    "trade_analytics": "Pattern recognition, best trading hours/days, strategy performance tracking",
    "system_monitoring": "Real-time dashboard, health checks, automated alerts",
    "configuration_management": "YAML-based settings with validation and hot-reloading",
    "data_persistence": "Performance metrics, trade journal, and risk analytics preserved across restarts",
    "reliability_features": "Tenacity retry logic, circuit breakers, dashboard fallbacks, graceful error handling"
  },
  "feature_status_system": {
    "location": "system_x.py lines 290-323",
    "reporting_function": "Advanced Features Status display in __init__ method",
    "determination_logic": "Based on import availability constants (SECURITY_AVAILABLE, ML_AVAILABLE, etc.)",
    "status_categories": {
      "security": "Enhanced (cryptography + keyring) vs Basic",
      "ml": "Available (sklearn) vs Basic", 
      "monitoring": "HTTP Enabled (Flask) vs Local Only",
      "finrl": "Full (processor_alpaca) vs Limited",
      "ppo": "Available (stable_baselines3) vs Simplified",
      "data": "Polygon + Alpaca vs Alpaca Only"
    }
  }
}